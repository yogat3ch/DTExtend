% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DT_callback.R
\name{DT_callback}
\alias{DT_callback}
\title{Custom \code{\link[DT]{datatable}} callback Javascript}
\usage{
DT_callback(
  ...,
  search_icon = TRUE,
  page_input = TRUE,
  pageLength_input = TRUE,
  filter_placeholders = TRUE,
  retain_policy_color = TRUE,
  retain_selections = TRUE,
  tab_accessible = FALSE,
  debugger = FALSE
)
}
\arguments{
\item{...}{\code{chr} arbitrary character strings to add as JS}

\item{search_icon}{\code{lgl} Whether to replace the "Search:" on the search field with a FontAwesome magnifying class symbol. Requires FontAwesome (typically included in shiny).}

\item{page_input}{\code{lgl} Whether to include a custom Shiny input that saves the page number as \verb{input$[table output id]_page}.}

\item{pageLength_input}{\code{lgl} Whether to include a custom Shiny input that saves the pageLength as \verb{input$[table output id]_pageLength}.}

\item{filter_placeholders}{\code{lgl} Whether to replace the Filter column placeholders using JS function \code{dt_filter_placeholders}}

\item{retain_policy_color}{\code{lgl} Whether to retain the color of the Policy ID column.}

\item{retain_selections}{\code{lgl} Whether to retain the selections from the previous render of the table}

\item{tab_accessible}{\code{lgl} Whether to enable row selection by pressing the \code{Enter} key. Requires \code{extensions = 'KeyTables'} with \code{options = list(keys = TRUE)}. Sets a jQuery event listener which doesn't need to be re-established on table redraw.}

\item{debugger}{\code{lgl} Whether to insert a debugger statement in the callback function}
}
\value{
\code{chr/JS_EVAL} Generated by \code{\link[DT]{JS}}
}
\description{
Custom \code{\link[DT]{datatable}} callback Javascript
}
\details{
To preserve the page number, a custom shiny input must be set at the end of the DT render function, followed by an observer on the page input that uses \code{\link[DT]{selectPage}} to update the page via \code{\link[DT]{dataTableProxy}}. To preserve the pageLength, the page length input must be passed as the pageLength option to the DT call with the following pattern \code{shiny::isolate(\verb{input$[table output id]_pageLength}) \%||\% \link{default value}} where default value is just the default pageLength you wish to supply in the event the pageLength is NULL.
}
